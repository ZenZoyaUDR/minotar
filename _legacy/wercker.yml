box: golang:alpine
  env:
    GO111MODULE: off
build:
  steps:

    - setup-go-workspace

    - script:
        name: install build dependency
        code: |
          apk --no-cache add git    
        
    # Gets the dependencies
    - script:
        name: go get
        code: |
          go version
          go get -t

    # Build the project for Linux and Mac
    - script:
        name: go build
        code: |
          GOOS=linux GOARCH=amd64 go build -o $WERCKER_OUTPUT_DIR/imgd_linux_amd64
          GOOS=darwin GOARCH=amd64 go build -o $WERCKER_OUTPUT_DIR/imgd_darwin_amd64

    # Test the project
    - script:
        name: go test
        code: |
          # If we don't pull in sub-packages imports, then this will fail
          # go test ./...
          go test

release:
  steps:

    - script:
        name: install release dependencies
        code: |
          apk --no-cache add file curl

    # Should ideally use some intelligence to get version, eg $(./imgd -version) would be cool
    - github-create-release:
        token: $GITHUB_TOKEN
        tag: 3.0.1
        title: imgd 3.0.1
        draft: true

    - github-upload-asset:
        token: $GITHUB_TOKEN
        file: $WERCKER_ROOT/imgd_linux_amd64

    - github-upload-asset:
        token: $GITHUB_TOKEN
        file: $WERCKER_ROOT/imgd_darwin_amd64
