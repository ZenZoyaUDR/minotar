//go:build ignore

package main

import (
	"encoding/base64"
	"io"
	"os"
	"text/template"
)

const (
	goSourceTemplate = `
// Generated by load_skin.go
package sample_skin

const SampleSkinBase64 = "{{ .Base64 }}"
`
)

func writeTemplate(w io.Writer, b64 string) error {
	t := template.Must(template.New("sample_skin_b64").Parse(goSourceTemplate))
	return t.Execute(w, struct{ Base64 string }{Base64: b64})

}

func main() {
	skinFile, err := os.Open("sample_skin.png")
	if err != nil {
		panic(err)
	}

	skinBytes, err := io.ReadAll(skinFile)
	if err != nil {
		panic(err)
	}
	b64 := base64.StdEncoding.EncodeToString(skinBytes)

	generatedFile, err := os.Create("sample_skin_b64_gen.go")
	err = writeTemplate(generatedFile, b64)
	if err != nil {
		panic(err)
	}
}
